window.vc || (window.vc = {}),
    function() {
        var r = vc.events = {};
        _.extend(r, Backbone.Events), r.triggerShortcodeEvents = function(r, t) {
            var e = t.get("shortcode");
            this.trigger("shortcodes", t, r), this.trigger("shortcodes:" + e, t, r), this.trigger("shortcodes:" + r, t), this.trigger("shortcodes:" + e + ":" + r, t), this.trigger("shortcodes:" + e + ":" + r + ":parent:" + t.get("parent_id"), t), this.triggerParamsEvents(r, t)
        }, r.triggerParamsEvents = function(t, e) {
            var a = e.get("shortcode"),
                s = _.extend({}, e.get("params")),
                r = vc.map[a];
            _.isArray(r.params) && _.each(r.params, function(r) {
                this.trigger("shortcodes:" + t + ":param", e, s[r.param_name], r), this.trigger("shortcodes:" + a + ":" + t + ":param", e, s[r.param_name], r), this.trigger("shortcodes:" + t + ":param:type:" + r.type, e, s[r.param_name], r), this.trigger("shortcodes:" + a + ":" + t + ":param:type:" + r.type, e, s[r.param_name], r), this.trigger("shortcodes:" + t + ":param:name:" + r.param_name, e, s[r.param_name], r), this.trigger("shortcodes:" + a + ":" + t + ":param:name:" + r.param_name, e, s[r.param_name], r)
            }, this)
        }
    }();
! function(c) {
    vc.AccessPolicyConstructor = function() {
        this.accessPolicy = {}, vc.events.trigger("vc:access:initialize", this)
    }, vc.AccessPolicyConstructor.prototype = {
        accessPolicy: {},
        add: function(c, s) {
            s = !!_.isUndefined(s) || !!s, this.accessPolicy[c] = s
        },
        can: function(c) {
            return !!this.accessPolicy[c]
        }
    }, c(function() {
        vc.accessPolicy = new vc.AccessPolicyConstructor
    })
}(window.jQuery);
! function(d) {
    vc.events.on("vc:access:initialize", function(e) {
        e.add("be_editor", vc_user_access().editor("backend_editor")), e.add("fe_editor", window.vc_frontend_enabled && vc_user_access().editor("frontend_editor")), e.add("classic_editor", !vc_user_access().check("backend_editor", "disabled_ce_editor", void 0, !0)), window.vc.gridItemEditor || vc.events.trigger("vc:access:backend:ready", e)
    }), vc.events.on("vc:access:backend:ready", function(e) {
         /* nectar addition */
            var front = "",
            back = "",
            $buttonsContainer = "",
            $titleDiv = jQuery("div#titlediv"),
            gutenbergEditor = document.getElementById("editor");
            
            var access = e;
            var $btnLocation = (jQuery('#nectar-metabox-portfolio-extra').length == 0) ? $titleDiv : jQuery('#post-body-content');

        $titleDiv.length ? (access.can("fe_editor") && (front = '<a class="wpb_switch-to-front-composer" href="' + jQuery("#wpb-edit-inline").attr("href") + '">' + window.i18nLocale.main_button_title_frontend_editor + "</a>"), access.can("classic_editor") ? access.can("be_editor") && (back = '<a class="wpb_switch-to-composer" href="javascript:;">' + window.i18nLocale.main_button_title_backend_editor + "</a>") : (jQuery("#postdivrich").addClass("vc-disable-editor"), access.can("be_editor") && !vc_user_access().isBlockEditorIsEnabled() && _.defer(function() {
            vc.events.trigger("vc:backend_editor:show")
        })), window.wpbIsGutenberg && ($buttonsContainer = '<a class="wpb_switch-to-gutenberg" href="' + window.wpbGutenbergEditorSWitchUrl + '">' + window.i18nLocale.main_button_title_gutenberg + "</a>"), (front || back || $buttonsContainer) && ($buttonsContainer = $titleDiv.length ? jQuery('<div class="composer-switch"><div class="composer-inner-switch"><span class="logo-icon"></span>' + back + front + "</div>" + $buttonsContainer + "</div>").insertAfter($btnLocation) : jQuery('<div class="composer-switch"><div class="composer-inner-switch"><span class="logo-icon"></span>' + back + front + "</div>" + $buttonsContainer + "</div>").prependTo("#post-body-content"), access.can("classic_editor") && $buttonsContainer.find(".wpb_switch-to-composer").on("click", function(e) {
            vc.events.trigger("vc:backend_editor:switch")
        }))) : gutenbergEditor && window.wp.data.subscribe(function() {
            setTimeout(function() {
                back = '<a data-toolbar-item="true" class="wpb_switch-to-composer" href="' + window.wpbGutenbergEditorClassicSWitchUrl + '">' + window.i18nLocale.main_button_title + "</a>";
                var $switcherContainer, gutenbergEditorHeader = gutenbergEditor ? gutenbergEditor.querySelector(".edit-post-header-toolbar") : null;
                gutenbergEditorHeader && !gutenbergEditorHeader.querySelector(".composer-switch") && ($switcherContainer = jQuery('<div class="composer-switch"><div class="composer-inner-switch"><span class="logo-icon"></span>' + back + "</div></div>"), gutenbergEditorHeader.querySelector(".edit-post-header-toolbar__left") ? gutenbergEditorHeader.querySelector(".edit-post-header-toolbar__left").after($switcherContainer.get(0)) : gutenbergEditorHeader.append($switcherContainer.get(0)))
            }, 100)
        })
        /* nectar addition end */
    })
}(window.jQuery);